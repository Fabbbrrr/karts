version: '3.8'

services:
  racefacer-analysis:
    build: .
    container_name: racefacer-analysis-server
    ports:
      - "3001:3001"
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
    environment:
      - NODE_ENV=production
      - PORT=3001
      - WS_HOST=${WS_HOST:-lemansentertainment.loc}
      - WS_PORT=${WS_PORT:-8131}
      - WS_PROTOCOL=${WS_PROTOCOL:-ws}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_SESSIONS=${MAX_SESSIONS:-50}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
    restart: unless-stopped
    networks:
      - racefacer-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: racefacer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - racefacer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  redis-data:
    driver: local

networks:
  racefacer-network:
    driver: bridge
